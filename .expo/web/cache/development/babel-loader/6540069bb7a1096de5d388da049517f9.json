{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CATEGORIES } from \"../../data/categories\";\nimport { SELECT_CATEGORY } from \"../actions/CategoryAction\";\nvar initialState = {\n  categories: CATEGORIES,\n  selected: null\n};\n\nvar CategoryReducer = function CategoryReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SELECT_CATEGORY:\n      var indexCategory = state.categories.findIndex(function (cat) {\n        return cat.id === action.categoryID;\n      });\n      if (indexCategory === -1) return state;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selected: state.categories[indexCategory]\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default CategoryReducer;","map":{"version":3,"sources":["/home/ggatica/Escritorio/ProyectoEntrega/store/reducer/CategoryReducer.js"],"names":["CATEGORIES","SELECT_CATEGORY","initialState","categories","selected","CategoryReducer","state","action","type","indexCategory","findIndex","cat","id","categoryID"],"mappings":";;;;;;AAAA,SAASA,UAAT;AACA,SAASC,eAAT;AAEA,IAAMC,YAAY,GAAE;AAChBC,EAAAA,UAAU,EAAEH,UADI;AAEhBI,EAAAA,QAAQ,EAAE;AAFM,CAApB;;AAKA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAgC;AAAA,MAA/BC,KAA+B,uEAAvBJ,YAAuB;AAAA,MAAVK,MAAU;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,eAAL;AACI,UAAMQ,aAAa,GAAGH,KAAK,CAACH,UAAN,CAAiBO,SAAjB,CAA2B,UAAAC,GAAG;AAAA,eAAEA,GAAG,CAACC,EAAJ,KAASL,MAAM,CAACM,UAAlB;AAAA,OAA9B,CAAtB;AACA,UAAIJ,aAAa,KAAG,CAAC,CAArB,EAAwB,OAAOH,KAAP;AACxB,6CAAWA,KAAX;AAAiBF,QAAAA,QAAQ,EAAEE,KAAK,CAACH,UAAN,CAAiBM,aAAjB;AAA3B;;AACJ;AACI,aAAOH,KAAP;AANR;AAUP,CAXD;;AAaA,eAAeD,eAAf","sourcesContent":["import { CATEGORIES } from \"../../data/categories\";\nimport { SELECT_CATEGORY } from \"../actions/CategoryAction\";\n\nconst initialState ={\n    categories: CATEGORIES,\n    selected: null\n}\n\nconst CategoryReducer = (state = initialState,action) =>{\n        switch (action.type){\n            case SELECT_CATEGORY:\n                const indexCategory = state.categories.findIndex(cat=>cat.id===action.categoryID)\n                if (indexCategory===-1) return state\n                return {...state,selected: state.categories[indexCategory]}\n            default:\n                return state\n        }\n    \n   \n}\n\nexport default CategoryReducer"]},"metadata":{},"sourceType":"module"}