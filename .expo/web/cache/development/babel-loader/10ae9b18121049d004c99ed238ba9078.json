{"ast":null,"code":"import React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { Ionicons } from '@expo/vector-icons';\nimport CategoryScreen from \"../screens/CategoryScreen\";\nimport CategoryBreadScreen from \"../screens/CategoryBreadScreen\";\nimport BreadDetailScreen from \"../screens/BreadDetailScreen\";\nimport CartScreen from \"../screens/CartScreen\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport NewPlaceScreen from \"../screens/NewPlaceScreen\";\nimport PlaceListScreen from \"../screens/PlaceListScreen\";\nimport { getLocation } from \"../components/getLocation\";\nvar Stack = createNativeStackNavigator();\nvar CartStack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar LocationStack = createNativeStackNavigator();\nexport default function Navigator() {\n  function CartStackRender() {\n    return React.createElement(CartStack.Navigator, {\n      screenOptions: {\n        headerTitleAlign: 'center',\n        headerStyle: {\n          backgroundColor: '#000000'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      }\n    }, React.createElement(CartStack.Screen, {\n      name: 'Cart',\n      component: CartScreen\n    }));\n  }\n\n  function LocationStackRender() {\n    return React.createElement(LocationStack.Navigator, {\n      screenOptions: {\n        headerTitleAlign: 'center',\n        headerStyle: {\n          backgroundColor: '#000000'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      }\n    }, React.createElement(LocationStack.Screen, {\n      name: 'See Location',\n      component: getLocation\n    }));\n  }\n\n  function ShopStackRender() {\n    return React.createElement(Stack.Navigator, {\n      screenOptions: {\n        headerTitleAlign: 'center',\n        headerStyle: {\n          backgroundColor: '#000000'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Home\",\n      component: CategoryScreen,\n      options: {\n        title: 'Great Market'\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"CategoryBreadScreen\",\n      options: function options(_ref) {\n        var _route$params;\n\n        var route = _ref.route;\n        return {\n          title: (_route$params = route.params) == null ? void 0 : _route$params.name\n        };\n      },\n      component: CategoryBreadScreen\n    }), React.createElement(Stack.Screen, {\n      name: \"Detail\",\n      options: function options(_ref2) {\n        var _route$params2;\n\n        var route = _ref2.route;\n        return {\n          title: (_route$params2 = route.params) == null ? void 0 : _route$params2.name\n        };\n      },\n      component: BreadDetailScreen\n    }), React.createElement(Stack.Screen, {\n      name: \"Direccion\",\n      options: function options(_ref3) {\n        var _route$params3;\n\n        var route = _ref3.route;\n        return {\n          title: (_route$params3 = route.params) == null ? void 0 : _route$params3.name\n        };\n      },\n      component: PlaceListScreen\n    }), React.createElement(Stack.Screen, {\n      name: \"Probar Camara\",\n      options: function options(_ref4) {\n        var _route$params4;\n\n        var route = _ref4.route;\n        return {\n          title: (_route$params4 = route.params) == null ? void 0 : _route$params4.name\n        };\n      },\n      component: NewPlaceScreen\n    }));\n  }\n\n  return React.createElement(NavigationContainer, null, React.createElement(Tab.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      tabBarShowLabel: false,\n      tabBarStyle: style.tabBar\n    }\n  }, React.createElement(Tab.Screen, {\n    name: 'Shop',\n    component: ShopStackRender,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var focused = _ref5.focused;\n        return React.createElement(View, {\n          style: style.item\n        }, React.createElement(Ionicons, {\n          name: 'md-home',\n          size: 24,\n          color: focused ? 'black' : 'grey'\n        }), React.createElement(Text, null, \"Tienda\"));\n      }\n    }\n  }), React.createElement(Tab.Screen, {\n    name: 'Carrito',\n    component: CartStackRender,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref6) {\n        var focused = _ref6.focused;\n        return React.createElement(View, {\n          style: style.item\n        }, React.createElement(Ionicons, {\n          name: 'md-cart',\n          size: 24,\n          color: focused ? 'black' : 'grey'\n        }), React.createElement(Text, null, \"Carrito\"));\n      }\n    }\n  }), React.createElement(Tab.Screen, {\n    name: 'Location',\n    component: LocationStackRender,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref7) {\n        var focused = _ref7.focused;\n        return React.createElement(View, {\n          style: style.item\n        }, React.createElement(Ionicons, {\n          name: 'md-home',\n          size: 24,\n          color: focused ? 'red' : '#9A0A0A'\n        }), React.createElement(Text, null, \"Location\"));\n      }\n    }\n  })));\n}\nvar style = StyleSheet.create({\n  tabBar: {\n    shadowColor: '#7f5df8',\n    shadowOffset: {\n      width: 0,\n      height: 10\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 0.25,\n    elevation: 5,\n    position: 'absolute',\n    bottom: 5,\n    left: 10,\n    right: 10,\n    borderRadius: 15,\n    height: 90\n  },\n  item: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/home/ggatica/Escritorio/ProyectoEntrega/navigation/Navigator.js"],"names":["React","NavigationContainer","createNativeStackNavigator","Ionicons","CategoryScreen","CategoryBreadScreen","BreadDetailScreen","CartScreen","createBottomTabNavigator","NewPlaceScreen","PlaceListScreen","getLocation","Stack","CartStack","Tab","LocationStack","Navigator","CartStackRender","headerTitleAlign","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","LocationStackRender","ShopStackRender","title","route","params","name","headerShown","tabBarShowLabel","tabBarStyle","style","tabBar","tabBarIcon","focused","item","StyleSheet","create","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","position","bottom","left","right","borderRadius","flex","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { Ionicons } from '@expo/vector-icons';\nimport CategoryScreen from '../screens/CategoryScreen';\nimport CategoryBreadScreen from '../screens/CategoryBreadScreen';\nimport BreadDetailScreen from \"../screens/BreadDetailScreen\";\nimport CartScreen from \"../screens/CartScreen\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { StyleSheet, View,Text } from \"react-native\";\nimport NewPlaceScreen from \"../screens/NewPlaceScreen\";\nimport PlaceListScreen from \"../screens/PlaceListScreen\";\nimport { getLocation } from \"../components/getLocation\";\n\n\n\nconst Stack = createNativeStackNavigator();\nconst CartStack = createNativeStackNavigator();\nconst Tab= createBottomTabNavigator();\nconst LocationStack = createNativeStackNavigator();\n\nexport default function Navigator(){\nfunction CartStackRender(){\n  return (\n    <CartStack.Navigator  screenOptions={{\n      headerTitleAlign: 'center',\n      headerStyle: {\n      backgroundColor: '#000000',\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle :{\n        fontWeight: 'bold',\n      },\n    }}>\n        <CartStack.Screen name={'Cart'} component={CartScreen}/>\n    </CartStack.Navigator>\n  )\n}\nfunction LocationStackRender(){\n  return (\n    <LocationStack.Navigator screenOptions={{\n      headerTitleAlign: 'center',\n      headerStyle: {\n      backgroundColor: '#000000',\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle :{\n        fontWeight: 'bold',\n      },\n    }}>\n      <LocationStack.Screen name={'See Location'} component={getLocation}/>\n    </LocationStack.Navigator>\n  )\n  \n}\nfunction ShopStackRender(){\n        return <Stack.Navigator\n                    screenOptions={{\n                    headerTitleAlign: 'center',\n                    headerStyle: {\n                    backgroundColor: '#000000',\n                    },\n                    headerTintColor: '#fff',\n                    headerTitleStyle :{\n                      fontWeight: 'bold',\n                    },\n                  }}\n                  >\n                    <Stack.Screen name=\"Home\" component={CategoryScreen} options={{ title: 'Great Market'}}/>\n                    <Stack.Screen name=\"CategoryBreadScreen\" options={({ route }) => ({ title: route.params?.name })} component={CategoryBreadScreen}/>\n                    <Stack.Screen name=\"Detail\" options={({ route }) => ({ title: route.params?.name })} component={BreadDetailScreen}/>\n                    <Stack.Screen name=\"Direccion\" options={({ route }) => ({ title: route.params?.name })} component={PlaceListScreen}/>\n                    <Stack.Screen name=\"Probar Camara\" options={({ route }) => ({ title: route.params?.name })} component={NewPlaceScreen}/>\n                    \n\n                 </Stack.Navigator>\n}\n\n\n\nreturn (\n    <NavigationContainer>\n       <Tab.Navigator screenOptions={{headerShown:false, tabBarShowLabel: false, tabBarStyle: style.tabBar}}>\n            <Tab.Screen name={'Shop'} component={ShopStackRender} options={{tabBarIcon:({focused})=>(\n              <View style={style.item}>\n                  <Ionicons name={'md-home'} size={24} color={focused? 'black' : 'grey'}/>\n                  <Text>Tienda</Text>\n              </View>\n          )}}/>\n            <Tab.Screen name={'Carrito'} component={CartStackRender} options={{tabBarIcon:({focused})=>(\n              <View style={style.item}>\n                  <Ionicons name={'md-cart'} size={24} color={focused? 'black' : 'grey'}/>\n                  <Text>Carrito</Text>\n              </View>\n          )}}/>\n             <Tab.Screen name={'Location'} component={LocationStackRender} options={{tabBarIcon:({focused})=>(\n              <View style={style.item}>\n                  <Ionicons name={'md-home'} size={24} color={focused? 'red' : '#9A0A0A'}/>\n                  <Text>Location</Text>\n              </View>\n          )}}/>\n\n       </Tab.Navigator> \n    </NavigationContainer>\n  )\n\n  }\nconst style = StyleSheet.create({\n    tabBar:{\n      shadowColor: '#7f5df8',\n      shadowOffset: {width:0,height:10},\n      shadowOpacity: 0.25,\n      shadowRadius : 0.25,\n      elevation: 5,\n      position: 'absolute',\n      bottom: 5,\n      left: 10,\n      right: 10,\n      borderRadius: 15,\n      height:90,\n      \n    },\n    item:{\n      flex:1,\n      justifyContent:'center',\n      alignItems: 'center',\n    },\n  \n\n\n\n})"]},"metadata":{},"sourceType":"module"}