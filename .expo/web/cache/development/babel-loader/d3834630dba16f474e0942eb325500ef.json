{"ast":null,"code":"import { useNavigation } from '@react-navigation/core';\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport GridItem from \"./GridItem\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCategory } from \"../store/actions/CategoryAction\";\nexport default function CategoryScreen() {\n  var categories = useSelector(function (state) {\n    return state.categories.categories;\n  });\n  var dispatch = useDispatch();\n  navigation = useNavigation();\n\n  var handlerSelectedCategory = function handlerSelectedCategory(item) {\n    dispatch(selectCategory(item.id));\n    navigation.navigate('CategoryBreadScreen', {\n      name: item.title\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.boton\n  }, React.createElement(Button, {\n    color: 'black',\n    title: \"CAMARA\",\n    onPress: function onPress() {\n      return navigation.navigate('Probar Camara');\n    }\n  })), React.createElement(FlatList, {\n    numColumns: 2,\n    data: categories,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(GridItem, {\n        item: item,\n        onSelected: function onSelected() {\n          return handlerSelectedCategory(item);\n        }\n      });\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1\n  },\n  boton: {\n    padding: 20\n  }\n});","map":{"version":3,"sources":["/home/ggatica/Escritorio/ProyectoEntrega/screens/CategoryScreen.js"],"names":["useNavigation","React","GridItem","useDispatch","useSelector","selectCategory","CategoryScreen","categories","state","dispatch","navigation","handlerSelectedCategory","item","id","navigate","name","title","styles","container","boton","StyleSheet","create","alignItems","justifyContent","flex","padding"],"mappings":"AAAA,SAASA,aAAT,QAA8B,wBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,QAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT;AAEA,eAAe,SAASC,cAAT,GAAyB;AACrC,MAAOC,UAAU,GAAGH,WAAW,CAAC,UAAAI,KAAK;AAAA,WAAEA,KAAK,CAACD,UAAN,CAAiBA,UAAnB;AAAA,GAAN,CAA/B;AACA,MAAME,QAAQ,GAAGN,WAAW,EAA5B;AAEAO,EAAAA,UAAU,GAAGV,aAAa,EAA1B;;AAGA,MAAMW,uBAAuB,GAAC,SAAxBA,uBAAwB,CAACC,IAAD,EAAQ;AACjCH,IAAAA,QAAQ,CAACJ,cAAc,CAACO,IAAI,CAACC,EAAN,CAAf,CAAR;AACAH,IAAAA,UAAU,CAACI,QAAX,CAAoB,qBAApB,EAA0C;AAACC,MAAAA,IAAI,EAACH,IAAI,CAACI;AAAX,KAA1C;AACJ,GAHD;;AAKG,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,KACE,oBAAC,MAAD;AACA,IAAA,KAAK,EAAE,OADP;AAEA,IAAA,KAAK,EAAC,QAFN;AAGA,IAAA,OAAO,EAAE;AAAA,aAAMT,UAAU,CAACI,QAAX,CAAoB,eAApB,CAAN;AAAA;AAHT,IADF,CADF,EAQE,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAE,CAAtB;AAAyB,IAAA,IAAI,EAAEP,UAA/B;AAA2C,IAAA,UAAU,EAAE,0BAAU;AAAA,UAARK,IAAQ,QAARA,IAAQ;AAC5D,aAAO,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEA,IAAhB;AAAsB,QAAA,UAAU,EAAE;AAAA,iBAAID,uBAAuB,CAACC,IAAD,CAA3B;AAAA;AAAlC,QAAP;AACJ;AAFD,IARF,CADF;AAkBH;AACH,IAAMK,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,SAAS,EAAC;AACRI,IAAAA,UAAU,EAAE,QADJ;AAERC,IAAAA,cAAc,EAAE,QAFR;AAGRC,IAAAA,IAAI,EAAC;AAHG,GADmB;AAM7BL,EAAAA,KAAK,EAAC;AACJM,IAAAA,OAAO,EAAE;AADL;AANuB,CAAlB,CAAf","sourcesContent":["import { useNavigation } from '@react-navigation/core';\nimport React from 'react';\nimport {View,StyleSheet,FlatList,Button} from 'react-native';\nimport GridItem from './GridItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCategory } from '../store/actions/CategoryAction';\n \nexport default function CategoryScreen(){\n   const  categories = useSelector(state=>state.categories.categories)\n   const dispatch = useDispatch()\n\n   navigation = useNavigation()\n\n\n   const handlerSelectedCategory=(item)=>{\n        dispatch(selectCategory(item.id))\n        navigation.navigate('CategoryBreadScreen',{name:item.title})\n   }\n    \n      return (\n        <View style={styles.container}>\n          <View style={styles.boton}> \n            <Button\n            color={'black'}\n            title=\"CAMARA\"\n            onPress={() => navigation.navigate('Probar Camara')}\n          /></View>\n          \n          <FlatList numColumns={2} data={categories} renderItem={({item})=>{\n               return <GridItem item={item} onSelected={()=>handlerSelectedCategory(item)}/>\n          }}/>\n          \n\n         \n        </View>\n      );\n    \n  }\nconst styles = StyleSheet.create({\n    container:{\n      alignItems: 'center',\n      justifyContent: 'center',\n      flex:1,\n    },\n    boton:{\n      padding: 20\n    }\n})\n"]},"metadata":{},"sourceType":"module"}