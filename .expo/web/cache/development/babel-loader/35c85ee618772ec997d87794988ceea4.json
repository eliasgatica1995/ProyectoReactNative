{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_ITEM, CONFIRM_CART, REMOVE_ITEM } from \"../actions/CartAction\";\nvar INITIAL_STATE = {\n  items: [],\n  total: 0,\n  confirm: false\n};\n\nvar sumTotal = function sumTotal(list) {\n  return list.map(function (item) {\n    return item.stock * item.price;\n  }).reduce(function (a, b) {\n    return a + b;\n  }, 0);\n};\n\nvar CartReducer = function CartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_ITEM:\n      var updatedCart = [];\n\n      if (state.items.find(function (item) {\n        return item.id === action.item.id;\n      })) {\n        updatedCart = state.items.map(function (item) {\n          if (item.id === action.item.id) item.stock++;\n          return item;\n        });\n      } else {\n        var item = _objectSpread(_objectSpread({}, action.item), {}, {\n          stock: 1\n        });\n\n        updatedCart = [].concat(_toConsumableArray(state.items), [item]);\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: updatedCart,\n        total: sumTotal(updatedCart)\n      });\n\n    case REMOVE_ITEM:\n      var filteredCart = state.items.filter(function (item) {\n        return item.id !== action.itemID;\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: filteredCart,\n        total: sumTotal(filteredCart)\n      });\n\n    case CONFIRM_CART:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: [],\n        total: 0\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default CartReducer;","map":{"version":3,"sources":["/home/ggatica/Escritorio/ProyectoEntrega/store/reducer/CartReducer.js"],"names":["ADD_ITEM","CONFIRM_CART","REMOVE_ITEM","INITIAL_STATE","items","total","confirm","sumTotal","list","map","item","stock","price","reduce","a","b","CartReducer","state","action","type","updatedCart","find","id","filteredCart","filter","itemID"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,YAAnB,EAAiCC,WAAjC;AAEA,IAAMC,aAAa,GAAE;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,KAAK,EAAC,CAFW;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB;;AAKA,IAAMC,QAAQ,GAAE,SAAVA,QAAU,CAACC,IAAD;AAAA,SAAQA,IAAI,CAACC,GAAL,CAAS,UAAAC,IAAI;AAAA,WAAEA,IAAI,CAACC,KAAL,GAAWD,IAAI,CAACE,KAAlB;AAAA,GAAb,EAAsCC,MAAtC,CAA6C,UAACC,CAAD,EAAGC,CAAH;AAAA,WAAOD,CAAC,GAACC,CAAT;AAAA,GAA7C,EAAwD,CAAxD,CAAR;AAAA,CAAhB;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAA+B;AAAA,MAA9BC,KAA8B,uEAAvBd,aAAuB;AAAA,MAATe,MAAS;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKnB,QAAL;AACI,UAAIoB,WAAW,GAAG,EAAlB;;AACA,UAAIH,KAAK,CAACb,KAAN,CAAYiB,IAAZ,CAAiB,UAAAX,IAAI;AAAA,eAAGA,IAAI,CAACY,EAAL,KAAUJ,MAAM,CAACR,IAAP,CAAYY,EAAzB;AAAA,OAArB,CAAJ,EAAsD;AAClDF,QAAAA,WAAW,GAAGH,KAAK,CAACb,KAAN,CAAYK,GAAZ,CAAgB,UAAAC,IAAI,EAAE;AAChC,cAAIA,IAAI,CAACY,EAAL,KAAUJ,MAAM,CAACR,IAAP,CAAYY,EAA1B,EAA8BZ,IAAI,CAACC,KAAL;AAC9B,iBAAOD,IAAP;AACH,SAHa,CAAd;AAIH,OALD,MAKM;AACF,YAAMA,IAAI,mCAAOQ,MAAM,CAACR,IAAd;AAAoBC,UAAAA,KAAK,EAAE;AAA3B,UAAV;;AACAS,QAAAA,WAAW,gCAAOH,KAAK,CAACb,KAAb,IAAmBM,IAAnB,EAAX;AACF;;AACN,6CAAWO,KAAX;AAAkBb,QAAAA,KAAK,EAAEgB,WAAzB;AAAsCf,QAAAA,KAAK,EAAEE,QAAQ,CAACa,WAAD;AAArD;;AACA,SAAKlB,WAAL;AACK,UAAMqB,YAAY,GAAGN,KAAK,CAACb,KAAN,CAAYoB,MAAZ,CAAmB,UAAAd,IAAI;AAAA,eAAEA,IAAI,CAACY,EAAL,KAAYJ,MAAM,CAACO,MAArB;AAAA,OAAvB,CAArB;AACL,6CAAWR,KAAX;AAAkBb,QAAAA,KAAK,EAAEmB,YAAzB;AAAuClB,QAAAA,KAAK,EAAGE,QAAQ,CAACgB,YAAD;AAAvD;;AACA,SAAKtB,YAAL;AACA,6CAAWgB,KAAX;AAAiBb,QAAAA,KAAK,EAAC,EAAvB;AAA2BC,QAAAA,KAAK,EAAC;AAAjC;;AACA;AACA,aAAOY,KAAP;AAnBJ;AAuBH,CAxBD;;AAyBA,eAAeD,WAAf","sourcesContent":["import { ADD_ITEM, CONFIRM_CART, REMOVE_ITEM } from \"../actions/CartAction\";\n\nconst INITIAL_STATE ={\n    items: [],\n    total:0,\n    confirm: false\n}\nconst sumTotal =(list)=>list.map(item=>item.stock*item.price).reduce((a,b)=>a+b,0)\n\n\n\nconst CartReducer = (state =INITIAL_STATE,action)=>{\n    switch (action.type){\n        case ADD_ITEM:\n            let updatedCart = []\n            if (state.items.find(item =>item.id===action.item.id)){\n                updatedCart = state.items.map(item=>{\n                    if (item.id===action.item.id) item.stock++\n                    return item;\n                })\n            }else {\n                const item = {...action.item, stock: 1}\n                updatedCart = [...state.items,item]\n             }\n        return {...state, items: updatedCart, total: sumTotal(updatedCart)}\n        case REMOVE_ITEM:\n             const filteredCart = state.items.filter(item=>item.id !== action.itemID)\n        return {...state, items: filteredCart, total : sumTotal(filteredCart)}\n        case CONFIRM_CART:         \n        return {...state,items:[], total:0}\n        default:\n        return state\n    }\n   \n\n}\nexport default CartReducer"]},"metadata":{},"sourceType":"module"}