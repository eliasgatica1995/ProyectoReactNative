{"ast":null,"code":"import React, { useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport BreadItem from \"../components/BreadItem\";\nimport { PRODUCTOS } from \"../data/products\";\nimport { filteredItem, selectItem } from \"../store/actions/ItemAction\";\nexport default function CategoryBreadScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var dispatch = useDispatch();\n  var breadFilter = useSelector(function (state) {\n    return state.items.filteredItems;\n  });\n  var category = useSelector(function (state) {\n    return state.categories.selected;\n  });\n  useEffect(function () {\n    dispatch(filteredItem(category.id));\n  }, []);\n\n  var handlerSelectedItem = function handlerSelectedItem(value) {\n    dispatch(selectItem(value.id));\n    navigation.navigate('Detail');\n  };\n\n  var breadMap = function breadMap() {\n    return breadFilter.map(function (value, index) {\n      return React.createElement(BreadItem, {\n        item: value,\n        onSelected: function onSelected() {\n          return handlerSelectedItem(value);\n        },\n        key: index\n      });\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, breadMap());\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/ggatica/Escritorio/ProyectoEntrega/screens/CategoryBreadScreen.js"],"names":["React","useEffect","useDispatch","useSelector","BreadItem","PRODUCTOS","filteredItem","selectItem","CategoryBreadScreen","navigation","route","dispatch","breadFilter","state","items","filteredItems","category","categories","selected","id","handlerSelectedItem","value","navigate","breadMap","map","index","styles","container","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":"AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP;AACA,SAASC,SAAT;AACA,SAASC,YAAT,EAAuBC,UAAvB;AAIA,eAAe,SAASC,mBAAT,OAAgD;AAAA,MAAlBC,UAAkB,QAAlBA,UAAkB;AAAA,MAAPC,KAAO,QAAPA,KAAO;AAG3D,MAAMC,QAAQ,GAAET,WAAW,EAA3B;AACA,MAAMU,WAAW,GAAGT,WAAW,CAAC,UAAAU,KAAK;AAAA,WAAEA,KAAK,CAACC,KAAN,CAAYC,aAAd;AAAA,GAAN,CAA/B;AACA,MAAMC,QAAQ,GAAGb,WAAW,CAAC,UAAAU,KAAK;AAAA,WAAEA,KAAK,CAACI,UAAN,CAAiBC,QAAnB;AAAA,GAAN,CAA5B;AAEAjB,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,QAAQ,CAACL,YAAY,CAACU,QAAQ,CAACG,EAAV,CAAb,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAU;AACpCV,IAAAA,QAAQ,CAACJ,UAAU,CAACc,KAAK,CAACF,EAAP,CAAX,CAAR;AACAV,IAAAA,UAAU,CAACa,QAAX,CAAoB,QAApB;AACD,GAHD;;AASA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAK;AAClB,WAAOX,WAAW,CAACY,GAAZ,CAAgB,UAACH,KAAD,EAAOI,KAAP,EAAe;AAClC,aAAO,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAEJ,KAAjB;AAAwB,QAAA,UAAU,EAAE;AAAA,iBAAID,mBAAmB,CAACC,KAAD,CAAvB;AAAA,SAApC;AAAoE,QAAA,GAAG,EAAEI;AAAzE,QAAP;AACH,KAFM,CAAP;AAGH,GAJD;;AAMA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KAEKJ,QAAQ,EAFb,CADJ;AAOD;AACD,IAAMG,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EACT;AAAEG,IAAAA,IAAI,EAAE,CAAR;AACEC,IAAAA,UAAU,EAAE,QADd;AAEEC,IAAAA,cAAc,EAAE;AAFlB;AAF+B,CAAlB,CAAf","sourcesContent":["\nimport React, { useEffect } from 'react';\nimport {Text,View,StyleSheet,Button} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport BreadItem from '../components/BreadItem';\nimport { PRODUCTOS } from '../data/products';\nimport { filteredItem, selectItem } from '../store/actions/ItemAction';\n\n\n\nexport default function CategoryBreadScreen({navigation,route}){\n    \n\n    const dispatch =useDispatch();\n    const breadFilter = useSelector(state=>state.items.filteredItems)\n    const category = useSelector(state=>state.categories.selected)\n\n    useEffect(() => {\n      dispatch(filteredItem(category.id))\n    }, [])\n\n    const handlerSelectedItem = (value) =>{\n      dispatch(selectItem(value.id))\n      navigation.navigate('Detail')\n    }\n\n\n\n\n\n    const breadMap = () =>{\n        return breadFilter.map((value,index)=>{\n            return <BreadItem item={value} onSelected={()=>handlerSelectedItem(value)} key={index}/>\n        })\n    }\n\n    return (\n        <View style={styles.container}>\n        \n            {breadMap()}\n\n        </View>\n      );\n  }\n  const styles = StyleSheet.create({\n    container:\n    { flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  })"]},"metadata":{},"sourceType":"module"}